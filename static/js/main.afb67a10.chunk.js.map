{"version":3,"sources":["components/Footer/footer.module.scss","components/Header/header.module.scss","constants/tileFill.ts","components/Counter/index.tsx","components/Footer/index.tsx","components/Header/index.tsx","constants/keyCode.ts","components/Tile/index.tsx","constants/moveCode.ts","hooks/useDidMount.ts","utils/addId.ts","utils/createMove.ts","utils/rotateMatrix.ts","hooks/useDidUpdate.ts","hooks/useInterval.ts","constants/tetrominos.ts","hooks/useTetromino.ts","hooks/useTetris.ts","containers/Tetris/index.tsx","App.tsx","setupIcons.ts","index.tsx","components/Tile/tile.module.scss","containers/Tetris/tetris.module.scss"],"names":["module","exports","TileFill","Counter","count","memo","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","Header","header","KeyCode","Tile","fill","type","aria-label","classNames","tile","i","I","j","J","l","L","o","O","s","S","t","T","z","Z","MoveCode","useDidMount","callback","useEffect","addId","item","id","nanoid","createMove","code","Rotation","isRotation","Left","offset","rowIndex","columnIndex","Right","Down","isDown","rotateMatrix","matrix","produce","draft","forEach","_","index","map","row","reverse","useDidUpdate","didMount","useRef","deps","current","useInterval","interval","callbackRef","intervalId","setInterval","call","clearInterval","tetrominos","undefined","useTetromino","width","useState","tetromino","setTetromino","position","setPosition","randomize","randomTetromino","Math","floor","random","length","makeMove","useTetris","params","height","emptyTiles","useMemo","Array","from","tiles","setTiles","mergedTiles","setMergedTiles","clearedRowsCount","setClearedRowsCount","score","setScore","move","setMove","isAutoDrop","setIsAutoDrop","willTetrominoCollide","some","rowIndexAhead","columnIndexAhead","willCollide","filledRowsIndexes","reduce","indexes","push","Tetris","containerRef","focus","data-testid","tetris","ref","onClick","event","preventDefault","onKeyDown","keyCode","ArrowUp","ArrowLeft","ArrowRight","ArrowDown","onKeyUp","style","gridTemplateColumns","App","library","add","faGithub","setupIcons","render","document","getElementById"],"mappings":"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","file":"static/js/main.afb67a10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2RxHW\",\"link\":\"footer_link__2KGou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2l8_Z\",\"link\":\"header_link__3G0Uu\"};","// eslint-disable-next-line no-shadow\nenum TileFill {\n  I = 1,\n  J,\n  L,\n  O,\n  S,\n  T,\n  Z,\n}\n\nexport default TileFill;\n","import { memo } from 'react';\n\nconst Counter = ({ count }: { count: number }) => <div>{count}</div>;\n\nexport default memo(Counter);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <span>\n      Powered by\n      <a\n        className={styles.link}\n        href=\"https://github.com/FakeMetalFan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      &copy;\n      <span>{new Date().getFullYear()}</span>\n    </span>\n  </footer>\n);\n\nexport default memo(Footer);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    Tetris\n    <a\n      className={styles.link}\n      href=\"https://github.com/FakeMetalFan/tetris\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FontAwesomeIcon icon={['fab', 'github']} />\n    </a>\n  </header>\n);\n\nexport default memo(Header);\n","// eslint-disable-next-line no-shadow\nenum KeyCode {\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n}\n\nexport default KeyCode;\n","import classNames from 'classnames';\nimport TileFill from 'constants/tileFill';\nimport { memo } from 'react';\n\nimport styles from './tile.module.scss';\n\nconst Tile = ({ fill }: { fill?: TileFill }) => (\n  <button\n    type=\"button\"\n    aria-label=\"tile\"\n    className={classNames(styles.tile, {\n      [styles.i]: fill === TileFill.I,\n      [styles.j]: fill === TileFill.J,\n      [styles.l]: fill === TileFill.L,\n      [styles.o]: fill === TileFill.O,\n      [styles.s]: fill === TileFill.S,\n      [styles.t]: fill === TileFill.T,\n      [styles.z]: fill === TileFill.Z,\n    })}\n  />\n);\n\nexport default memo(Tile);\n","// eslint-disable-next-line no-shadow\nenum MoveCode {\n  Rotation,\n  Left,\n  Right,\n  Down,\n}\n\nexport default MoveCode;\n","import { useEffect } from 'react';\n\nconst useDidMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useDidMount;\n","import { nanoid } from 'nanoid';\n\nconst addId = <T extends Record<string, unknown>>(item: T) => ({\n  ...item,\n  id: nanoid(),\n});\n\nexport default addId;\n","import MoveCode from 'constants/moveCode';\n\nconst createMove = (code?: MoveCode) => {\n  switch (code) {\n    case MoveCode.Rotation:\n      return { isRotation: true };\n    case MoveCode.Left:\n      return { offset: { rowIndex: 0, columnIndex: -1 } };\n    case MoveCode.Right:\n      return { offset: { rowIndex: 0, columnIndex: 1 } };\n    case MoveCode.Down:\n    default:\n      return { isDown: true, offset: { rowIndex: 1, columnIndex: 0 } };\n  }\n};\n\nexport default createMove;\n","import produce, { Draft } from 'immer';\n\nconst rotateMatrix = <T>(matrix: T[][]) =>\n  produce(matrix, (draft) => {\n    draft.forEach((_, index) => {\n      // eslint-disable-next-line no-param-reassign\n      draft[index] = matrix.map((row) => row[index]) as Draft<T[]>;\n    });\n\n    draft.map((row) => row.reverse());\n  });\n\nexport default rotateMatrix;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdate = (callback: () => void, ...deps: unknown[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      callback();\n    } else {\n      didMount.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidUpdate;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: () => void, interval?: number | null) => {\n  const callbackRef = useRef<typeof callback>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  useEffect(() => {\n    if (!interval) {\n      return undefined;\n    }\n\n    const intervalId = setInterval(() => {\n      callbackRef.current?.();\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [interval]);\n};\n\nexport default useInterval;\n","import TileFill from './tileFill';\n\nconst tetrominos = [\n  [\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n  ],\n  [\n    [undefined, TileFill.J, undefined],\n    [undefined, TileFill.J, undefined],\n    [TileFill.J, TileFill.J, undefined],\n  ],\n  [\n    [undefined, TileFill.L, undefined],\n    [undefined, TileFill.L, undefined],\n    [undefined, TileFill.L, TileFill.L],\n  ],\n  [\n    [TileFill.O, TileFill.O],\n    [TileFill.O, TileFill.O],\n  ],\n  [\n    [undefined, TileFill.S, TileFill.S],\n    [TileFill.S, TileFill.S, undefined],\n    [undefined, undefined, undefined],\n  ],\n  [\n    [undefined, TileFill.T, undefined],\n    [TileFill.T, TileFill.T, TileFill.T],\n    [undefined, undefined, undefined],\n  ],\n  [\n    [TileFill.Z, TileFill.Z, undefined],\n    [undefined, TileFill.Z, TileFill.Z],\n    [undefined, undefined, undefined],\n  ],\n];\n\nexport default tetrominos;\n","import tetrominos from 'constants/tetrominos';\nimport TileFill from 'constants/tileFill';\nimport produce from 'immer';\nimport { useState } from 'react';\nimport rotateMatrix from 'utils/rotateMatrix';\n\nconst useTetromino = ({ width }: TetrisParams) => {\n  const [tetromino, setTetromino] = useState<(TileFill | undefined)[][]>([]);\n\n  const [position, setPosition] = useState({ rowIndex: 0, columnIndex: 0 });\n\n  const randomize = () => {\n    const randomTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    setTetromino(randomTetromino);\n    setPosition({\n      rowIndex: 0,\n      columnIndex: Math.floor((width - randomTetromino.length) / 2),\n    });\n  };\n\n  const makeMove = ({\n    isRotation,\n    offset = { rowIndex: 0, columnIndex: 0 },\n  }: Move) => {\n    if (isRotation) {\n      setTetromino(rotateMatrix(tetromino));\n    } else {\n      setPosition(\n        produce(position, (draft) => {\n          /* eslint-disable no-param-reassign */\n          draft.rowIndex += offset.rowIndex;\n          draft.columnIndex += offset.columnIndex;\n        })\n      );\n    }\n  };\n\n  return { tetromino, position, randomize, makeMove };\n};\n\nexport default useTetromino;\n","import TileFill from 'constants/tileFill';\nimport produce from 'immer';\nimport { useEffect, useMemo, useState } from 'react';\nimport addId from 'utils/addId';\nimport createMove from 'utils/createMove';\nimport rotateMatrix from 'utils/rotateMatrix';\n\nimport useDidUpdate from './useDidUpdate';\nimport useInterval from './useInterval';\nimport useTetromino from './useTetromino';\n\nconst useTetris = (params: TetrisParams) => {\n  const { width, height } = params;\n\n  const emptyTiles = useMemo(\n    () =>\n      Array.from({ length: height }, () =>\n        Array.from({ length: width }, () => addId({} as { fill?: TileFill }))\n      ),\n    [height, width]\n  );\n\n  const [tiles, setTiles] = useState(emptyTiles);\n\n  const [mergedTiles, setMergedTiles] = useState(emptyTiles);\n\n  const [clearedRowsCount, setClearedRowsCount] = useState(0);\n\n  const [score, setScore] = useState(0);\n\n  const [move, setMove] = useState<Move>({});\n\n  const [isAutoDrop, setIsAutoDrop] = useState(true);\n\n  const { tetromino, position, randomize, makeMove } = useTetromino(params);\n\n  const willTetrominoCollide = ({\n    matrix = tetromino,\n    offset = { rowIndex: 0, columnIndex: 0 },\n  }: { matrix?: typeof tetromino; offset?: Position } = {}) =>\n    matrix.some((row, rowIndex) =>\n      row.some((fill, columnIndex) => {\n        const rowIndexAhead = rowIndex + position.rowIndex + offset.rowIndex;\n        const columnIndexAhead =\n          columnIndex + position.columnIndex + offset.columnIndex;\n\n        return (\n          fill &&\n          (mergedTiles[rowIndexAhead]?.[columnIndexAhead]?.fill ||\n            rowIndexAhead >= height ||\n            columnIndexAhead >= width ||\n            columnIndexAhead < 0)\n        );\n      })\n    );\n\n  useEffect(() => {\n    randomize();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mergedTiles]);\n\n  useDidUpdate(\n    () => {\n      if (willTetrominoCollide()) {\n        setTiles(emptyTiles);\n        setMergedTiles(emptyTiles);\n        setClearedRowsCount(0);\n      } else {\n        setTiles(\n          produce(mergedTiles, (draft) => {\n            tetromino.forEach((row, rowIndex) => {\n              row.forEach((fill, columnIndex) => {\n                if (fill) {\n                  /* eslint-disable no-param-reassign */\n                  draft[rowIndex + position.rowIndex][\n                    columnIndex + position.columnIndex\n                  ].fill = fill;\n                }\n              });\n            });\n          })\n        );\n      }\n    },\n    tetromino,\n    position\n  );\n\n  useDidUpdate(() => {\n    const willCollide = willTetrominoCollide(\n      move.isRotation ? { matrix: rotateMatrix(tetromino) } : move\n    );\n\n    if (willCollide && move.isDown) {\n      const filledRowsIndexes = tiles.reduce((indexes, row, index) => {\n        const hasEmptyTiles = row.some(({ fill }) => !fill);\n\n        if (!hasEmptyTiles) {\n          indexes.push(index);\n        }\n\n        return indexes;\n      }, [] as number[]);\n\n      const { length } = filledRowsIndexes;\n\n      if (length) {\n        setClearedRowsCount(clearedRowsCount + length);\n        setMergedTiles(\n          produce(tiles, (draft) => {\n            filledRowsIndexes.forEach((index) => {\n              for (let rowIndex = index; rowIndex; rowIndex -= 1) {\n                draft[rowIndex].forEach((tile, columnIndex) => {\n                  tile.fill = draft[rowIndex - 1][columnIndex].fill;\n                });\n              }\n            });\n          })\n        );\n      } else {\n        setMergedTiles(tiles);\n      }\n    } else if (!willCollide) {\n      makeMove(move);\n    }\n  }, move);\n\n  useDidUpdate(() => {\n    setScore(clearedRowsCount ? score + clearedRowsCount * 10 : 0);\n  }, clearedRowsCount);\n\n  useInterval(\n    () => {\n      setMove(createMove());\n    },\n    isAutoDrop ? 1e3 : null\n  );\n\n  return { tiles, score, setMove, setIsAutoDrop };\n};\n\nexport default useTetris;\n","import Counter from 'components/Counter';\nimport Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport Tile from 'components/Tile';\nimport KeyCode from 'constants/keyCode';\nimport MoveCode from 'constants/moveCode';\nimport useDidMount from 'hooks/useDidMount';\nimport useTetris from 'hooks/useTetris';\nimport { KeyboardEvent, SyntheticEvent, useRef } from 'react';\nimport createMove from 'utils/createMove';\n\nimport styles from './tetris.module.scss';\n\nconst Tetris = (params: TetrisParams) => {\n  const { width } = params;\n\n  const containerRef = useRef<HTMLAnchorElement>(null);\n\n  const { tiles, score, setMove, setIsAutoDrop } = useTetris(params);\n\n  const handleClick = (event: SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n  };\n\n  const handleKeyDown = ({ keyCode }: KeyboardEvent) => {\n    switch (keyCode) {\n      case KeyCode.ArrowUp:\n        setMove(createMove(MoveCode.Rotation));\n        break;\n      case KeyCode.ArrowLeft:\n        setMove(createMove(MoveCode.Left));\n        break;\n      case KeyCode.ArrowRight:\n        setMove(createMove(MoveCode.Right));\n        break;\n      case KeyCode.ArrowDown:\n      default:\n        setIsAutoDrop(false);\n        setMove(createMove());\n    }\n  };\n\n  const handleKeyUp = ({ keyCode }: KeyboardEvent) => {\n    if (keyCode === KeyCode.ArrowDown) {\n      setIsAutoDrop(true);\n    }\n  };\n\n  useDidMount(() => {\n    containerRef.current?.focus();\n  });\n\n  return (\n    <>\n      <Header />\n      <main>\n        <a\n          href=\"/\"\n          data-testid={styles.tetris}\n          className={styles.tetris}\n          ref={containerRef}\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n          onKeyUp={handleKeyUp}\n        >\n          <div className={styles.score}>\n            <Counter count={score} />\n          </div>\n          <div\n            data-testid={styles.tiles}\n            className={styles.tiles}\n            style={{ gridTemplateColumns: `repeat(${width}, 1fr)` }}\n          >\n            {tiles.map((row) =>\n              row.map(({ fill, id }) => <Tile fill={fill} key={id} />)\n            )}\n          </div>\n        </a>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Tetris;\n","import Tetris from 'containers/Tetris';\n\nconst App = () => <Tetris width={10} height={20} />;\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub);\n};\n\nexport default setupIcons;\n","import 'index.scss';\n\nimport App from 'App';\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport setupIcons from 'setupIcons';\n\nsetupIcons();\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tile_tile__3mwM6\",\"i\":\"tile_i__25_aJ\",\"j\":\"tile_j__TNRBZ\",\"l\":\"tile_l__Zpgje\",\"o\":\"tile_o__2wu3P\",\"s\":\"tile_s__12WnI\",\"t\":\"tile_t__2_6li\",\"z\":\"tile_z__2vgfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tetris\":\"tetris_tetris__1xn-2\",\"tiles\":\"tetris_tiles__QqxGq\",\"score\":\"tetris_score__XB5WE\"};"],"sourceRoot":""}