{"version":3,"sources":["components/Footer/footer.module.scss","components/Header/header.module.scss","components/Tiles/tiles.module.scss","constants/tileFill.ts","components/Footer/index.tsx","components/Header/index.tsx","components/Counter/index.tsx","constants/keyCode.ts","components/Tile/index.tsx","components/Tiles/index.tsx","constants/moveCode.ts","hooks/useDidMount.ts","utils/addId.ts","utils/createMove.ts","utils/rotateMatrix.ts","hooks/useDidUpdate.ts","hooks/useInterval.ts","constants/tetrominos.ts","hooks/useTetromino.ts","hooks/useTetris.ts","containers/Tetris/index.tsx","setupIcons.ts","index.tsx","components/Tile/tile.module.scss","containers/Tetris/tetris.module.scss"],"names":["module","exports","TileFill","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","Header","header","Counter","count","memo","KeyCode","Tile","fill","classNames","tile","i","I","j","J","l","L","o","O","s","S","t","T","z","Z","type","Tiles","width","tiles","style","gridTemplateColumns","map","row","id","MoveCode","useDidMount","callback","useEffect","addId","item","nanoid","createMove","code","Rotation","isRotation","Left","offset","rowIndex","columnIndex","Right","Down","isDown","rotateMatrix","matrix","produce","draft","forEach","_","index","reverse","useDidUpdate","didMount","useRef","deps","current","useInterval","interval","callbackRef","intervalId","setInterval","call","clearInterval","tetrominos","undefined","useTetromino","useState","tetromino","setTetromino","position","setPosition","randomize","randomTetromino","Math","floor","random","length","makeMove","useTetris","props","height","emptyTiles","useMemo","Array","from","setTiles","mergedTiles","setMergedTiles","clearedRowsCount","setClearedRowsCount","score","setScore","move","setMove","isAutoDrop","setIsAutoDrop","willTetrominoCollide","some","rowIndexAhead","columnIndexAhead","willCollide","filledRowsIndexes","reduce","indexes","push","Tetris","containerRef","focus","tetris","ref","onClick","event","preventDefault","onKeyDown","keyCode","ArrowUp","ArrowLeft","ArrowRight","ArrowDown","onKeyUp","library","add","faGithub","setupIcons","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcfe76d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2RxHW\",\"link\":\"footer_link__2KGou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2l8_Z\",\"link\":\"header_link__3G0Uu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tiles\":\"tiles_tiles__1LOVM\"};","// eslint-disable-next-line no-shadow\nenum TileFill {\n  I = 1,\n  J,\n  L,\n  O,\n  S,\n  T,\n  Z,\n}\n\nexport default TileFill;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <span>\n      Powered by\n      <a\n        className={styles.link}\n        href=\"https://github.com/FakeMetalFan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      &copy;\n      <span>{new Date().getFullYear()}</span>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    Tetris\n    <a\n      className={styles.link}\n      href=\"https://github.com/FakeMetalFan/tetris\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FontAwesomeIcon icon={['fab', 'github']} />\n    </a>\n  </header>\n);\n\nexport default Header;\n","import { memo } from 'react';\n\ninterface Props {\n  className?: string;\n  count: number;\n}\n\nconst Counter = ({ className, count }: Props) => (\n  <div className={className}>{count}</div>\n);\n\nexport default memo(Counter);\n","// eslint-disable-next-line no-shadow\nenum KeyCode {\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n}\n\nexport default KeyCode;\n","import classNames from 'classnames';\nimport TileFill from 'constants/tileFill';\nimport { memo } from 'react';\n\nimport styles from './tile.module.scss';\n\ninterface Props {\n  fill?: TileFill;\n}\n\nconst Tile = ({ fill }: Props) => {\n  const className = classNames(styles.tile, {\n    [styles.i]: fill === TileFill.I,\n    [styles.j]: fill === TileFill.J,\n    [styles.l]: fill === TileFill.L,\n    [styles.o]: fill === TileFill.O,\n    [styles.s]: fill === TileFill.S,\n    [styles.t]: fill === TileFill.T,\n    [styles.z]: fill === TileFill.Z,\n  });\n\n  return <button type=\"button\" aria-label=\"tile\" className={className} />;\n};\n\nexport default memo(Tile);\n","import TileFill from 'constants/tileFill';\n\nimport Tile from '../Tile';\nimport styles from './tiles.module.scss';\n\ninterface Props {\n  width: number;\n  tiles: { id: string; fill?: TileFill }[][];\n}\n\nconst Tiles = ({ width, tiles }: Props) => {\n  const style = { gridTemplateColumns: `repeat(${width}, 1fr)` };\n\n  return (\n    <div data-testid={styles.tiles} className={styles.tiles} style={style}>\n      {tiles.map((row) =>\n        row.map(({ fill, id }) => <Tile fill={fill} key={id} />)\n      )}\n    </div>\n  );\n};\n\nexport default Tiles;\n","// eslint-disable-next-line no-shadow\nenum MoveCode {\n  Rotation,\n  Left,\n  Right,\n  Down,\n}\n\nexport default MoveCode;\n","import { useEffect } from 'react';\n\nconst useDidMount = (callback: () => void) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(callback, []);\n};\n\nexport default useDidMount;\n","import { nanoid } from 'nanoid';\n\nconst addId = <T extends Record<string, unknown>>(item: T) => ({\n  ...item,\n  id: nanoid(),\n});\n\nexport default addId;\n","import MoveCode from 'constants/moveCode';\n\nconst createMove = (code?: MoveCode) => {\n  switch (code) {\n    case MoveCode.Rotation:\n      return { isRotation: true };\n    case MoveCode.Left:\n      return { offset: { rowIndex: 0, columnIndex: -1 } };\n    case MoveCode.Right:\n      return { offset: { rowIndex: 0, columnIndex: 1 } };\n    case MoveCode.Down:\n    default:\n      return { isDown: true, offset: { rowIndex: 1, columnIndex: 0 } };\n  }\n};\n\nexport default createMove;\n","import produce, { Draft } from 'immer';\n\nconst rotateMatrix = <T>(matrix: T[][]) =>\n  produce(matrix, (draft) => {\n    draft.forEach((_, index) => {\n      // eslint-disable-next-line no-param-reassign\n      draft[index] = matrix.map((row) => row[index]) as Draft<T[]>;\n    });\n\n    draft.map((row) => row.reverse());\n  });\n\nexport default rotateMatrix;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdate = (callback: () => void, ...deps: unknown[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      callback();\n    } else {\n      didMount.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidUpdate;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (\n  callback: () => void,\n  interval?: number | null | false\n) => {\n  const callbackRef = useRef<typeof callback>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (interval) {\n      const intervalId = setInterval(() => {\n        callbackRef.current?.();\n      }, interval);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [interval]);\n};\n\nexport default useInterval;\n","import TileFill from './tileFill';\n\nconst tetrominos = [\n  [\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n    [undefined, TileFill.I, undefined, undefined],\n  ],\n  [\n    [undefined, TileFill.J, undefined],\n    [undefined, TileFill.J, undefined],\n    [TileFill.J, TileFill.J, undefined],\n  ],\n  [\n    [undefined, TileFill.L, undefined],\n    [undefined, TileFill.L, undefined],\n    [undefined, TileFill.L, TileFill.L],\n  ],\n  [\n    [TileFill.O, TileFill.O],\n    [TileFill.O, TileFill.O],\n  ],\n  [\n    [undefined, TileFill.S, TileFill.S],\n    [TileFill.S, TileFill.S, undefined],\n    [undefined, undefined, undefined],\n  ],\n  [\n    [undefined, TileFill.T, undefined],\n    [TileFill.T, TileFill.T, TileFill.T],\n    [undefined, undefined, undefined],\n  ],\n  [\n    [TileFill.Z, TileFill.Z, undefined],\n    [undefined, TileFill.Z, TileFill.Z],\n    [undefined, undefined, undefined],\n  ],\n];\n\nexport default tetrominos;\n","import tetrominos from 'constants/tetrominos';\nimport TileFill from 'constants/tileFill';\nimport produce from 'immer';\nimport { useState } from 'react';\nimport rotateMatrix from 'utils/rotateMatrix';\n\nconst useTetromino = ({ width }: TetrisProps) => {\n  const [tetromino, setTetromino] = useState<(TileFill | undefined)[][]>([]);\n\n  const [position, setPosition] = useState({ rowIndex: 0, columnIndex: 0 });\n\n  const randomize = () => {\n    const randomTetromino =\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    setTetromino(randomTetromino);\n    setPosition({\n      rowIndex: 0,\n      columnIndex: Math.floor((width - randomTetromino.length) / 2),\n    });\n  };\n\n  const makeMove = ({\n    isRotation,\n    offset = { rowIndex: 0, columnIndex: 0 },\n  }: Move) => {\n    if (isRotation) {\n      setTetromino(rotateMatrix(tetromino));\n    } else {\n      setPosition(\n        produce(position, (draft) => {\n          /* eslint-disable no-param-reassign */\n          draft.rowIndex += offset.rowIndex;\n          draft.columnIndex += offset.columnIndex;\n        })\n      );\n    }\n  };\n\n  return { tetromino, position, randomize, makeMove };\n};\n\nexport default useTetromino;\n","import TileFill from 'constants/tileFill';\r\nimport produce from 'immer';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport addId from 'utils/addId';\r\nimport createMove from 'utils/createMove';\r\nimport rotateMatrix from 'utils/rotateMatrix';\r\n\r\nimport useDidUpdate from './useDidUpdate';\r\nimport useInterval from './useInterval';\r\nimport useTetromino from './useTetromino';\r\n\r\nconst useTetris = (props: TetrisProps) => {\r\n  const { width, height } = props;\r\n\r\n  const emptyTiles = useMemo(\r\n    () =>\r\n      Array.from({ length: height }, () =>\r\n        Array.from({ length: width }, () => addId({} as { fill?: TileFill }))\r\n      ),\r\n    [height, width]\r\n  );\r\n\r\n  const [tiles, setTiles] = useState(emptyTiles);\r\n\r\n  const [mergedTiles, setMergedTiles] = useState(emptyTiles);\r\n\r\n  const [clearedRowsCount, setClearedRowsCount] = useState(0);\r\n\r\n  const [score, setScore] = useState(0);\r\n\r\n  const [move, setMove] = useState<Move>({});\r\n\r\n  const [isAutoDrop, setIsAutoDrop] = useState(true);\r\n\r\n  const { tetromino, position, randomize, makeMove } = useTetromino(props);\r\n\r\n  const willTetrominoCollide = ({\r\n    matrix = tetromino,\r\n    offset = { rowIndex: 0, columnIndex: 0 },\r\n  }: { matrix?: typeof tetromino; offset?: Position } = {}) =>\r\n    matrix.some((row, rowIndex) =>\r\n      row.some((fill, columnIndex) => {\r\n        const rowIndexAhead = rowIndex + position.rowIndex + offset.rowIndex;\r\n        const columnIndexAhead =\r\n          columnIndex + position.columnIndex + offset.columnIndex;\r\n\r\n        return (\r\n          fill &&\r\n          (mergedTiles[rowIndexAhead]?.[columnIndexAhead]?.fill ||\r\n            rowIndexAhead >= height ||\r\n            columnIndexAhead >= width ||\r\n            columnIndexAhead < 0)\r\n        );\r\n      })\r\n    );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(randomize, [mergedTiles]);\r\n\r\n  useDidUpdate(\r\n    () => {\r\n      if (willTetrominoCollide()) {\r\n        setTiles(emptyTiles);\r\n        setMergedTiles(emptyTiles);\r\n        setClearedRowsCount(0);\r\n      } else {\r\n        setTiles(\r\n          produce(mergedTiles, (draft) => {\r\n            tetromino.forEach((row, rowIndex) => {\r\n              row.forEach((fill, columnIndex) => {\r\n                if (fill) {\r\n                  /* eslint-disable no-param-reassign */\r\n                  draft[rowIndex + position.rowIndex][\r\n                    columnIndex + position.columnIndex\r\n                  ].fill = fill;\r\n                }\r\n              });\r\n            });\r\n          })\r\n        );\r\n      }\r\n    },\r\n    tetromino,\r\n    position\r\n  );\r\n\r\n  useDidUpdate(() => {\r\n    const willCollide = willTetrominoCollide(\r\n      move.isRotation ? { matrix: rotateMatrix(tetromino) } : move\r\n    );\r\n\r\n    if (willCollide && move.isDown) {\r\n      const filledRowsIndexes = tiles.reduce((indexes, row, index) => {\r\n        const hasEmptyTiles = row.some(({ fill }) => !fill);\r\n\r\n        if (!hasEmptyTiles) {\r\n          indexes.push(index);\r\n        }\r\n\r\n        return indexes;\r\n      }, [] as number[]);\r\n\r\n      const { length } = filledRowsIndexes;\r\n\r\n      if (length) {\r\n        setClearedRowsCount(clearedRowsCount + length);\r\n        setMergedTiles(\r\n          produce(tiles, (draft) => {\r\n            filledRowsIndexes.forEach((index) => {\r\n              for (let rowIndex = index; rowIndex; rowIndex -= 1) {\r\n                draft[rowIndex].forEach((tile, columnIndex) => {\r\n                  tile.fill = draft[rowIndex - 1][columnIndex].fill;\r\n                });\r\n              }\r\n            });\r\n          })\r\n        );\r\n      } else {\r\n        setMergedTiles(tiles);\r\n      }\r\n    } else if (!willCollide) {\r\n      makeMove(move);\r\n    }\r\n  }, move);\r\n\r\n  useDidUpdate(() => {\r\n    setScore(clearedRowsCount ? score + clearedRowsCount * 10 : 0);\r\n  }, clearedRowsCount);\r\n\r\n  useInterval(\r\n    () => {\r\n      setMove(createMove());\r\n    },\r\n    isAutoDrop ? 1e3 : null\r\n  );\r\n\r\n  return { tiles, score, setMove, setIsAutoDrop };\r\n};\r\n\r\nexport default useTetris;\r\n","import Counter from 'components/Counter';\nimport Tiles from 'components/Tiles';\nimport KeyCode from 'constants/keyCode';\nimport MoveCode from 'constants/moveCode';\nimport useDidMount from 'hooks/useDidMount';\nimport useTetris from 'hooks/useTetris';\nimport { KeyboardEvent, SyntheticEvent, useRef } from 'react';\nimport createMove from 'utils/createMove';\n\nimport styles from './tetris.module.scss';\n\nconst Tetris = (props: TetrisProps) => {\n  const { width } = props;\n\n  const containerRef = useRef<HTMLAnchorElement>(null);\n\n  const { tiles, score, setMove, setIsAutoDrop } = useTetris(props);\n\n  const handleClick = (event: SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n  };\n\n  const handleKeyDown = ({ keyCode }: KeyboardEvent) => {\n    switch (keyCode) {\n      case KeyCode.ArrowUp:\n        setMove(createMove(MoveCode.Rotation));\n        break;\n      case KeyCode.ArrowLeft:\n        setMove(createMove(MoveCode.Left));\n        break;\n      case KeyCode.ArrowRight:\n        setMove(createMove(MoveCode.Right));\n        break;\n      case KeyCode.ArrowDown:\n      default:\n        setIsAutoDrop(false);\n        setMove(createMove());\n    }\n  };\n\n  const handleKeyUp = (event: KeyboardEvent) => {\n    if (event.keyCode === KeyCode.ArrowDown) {\n      setIsAutoDrop(true);\n    }\n  };\n\n  useDidMount(() => {\n    containerRef.current?.focus();\n  });\n\n  return (\n    <a\n      href=\"/\"\n      data-testid={styles.tetris}\n      className={styles.tetris}\n      ref={containerRef}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n    >\n      <Counter className={styles.score} count={score} />\n      <Tiles width={width} tiles={tiles} />\n    </a>\n  );\n};\n\nexport default Tetris;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub);\n};\n\nexport default setupIcons;\n","import 'index.scss';\n\nimport Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport Tetris from 'containers/Tetris';\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport setupIcons from 'setupIcons';\n\nsetupIcons();\n\nrender(\n  <StrictMode>\n    <Header />\n    <Tetris width={10} height={20} />\n    <Footer />\n  </StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tile_tile__3mwM6\",\"i\":\"tile_i__25_aJ\",\"j\":\"tile_j__TNRBZ\",\"l\":\"tile_l__Zpgje\",\"o\":\"tile_o__2wu3P\",\"s\":\"tile_s__12WnI\",\"t\":\"tile_t__2_6li\",\"z\":\"tile_z__2vgfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tetris\":\"tetris_tetris__1xn-2\",\"score\":\"tetris_score__XB5WE\"};"],"sourceRoot":""}